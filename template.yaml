AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ios-backend

  Sample SAM Template for ios-backend


Parameters:
  ProjectName:
    Type: String
    Description: Project Name
    Default: vs-code-test

Resources:

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: "vs-code-motivational-quotes"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"

       
      

#IAM Roles
  MyLambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect:  "Allow"
          Principal:
            Service:
              - "lambda.amazonaws.com"
          Action:
            - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: 
            Fn::Sub: "${ProjectName}-DynamoDBPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: 
                  - "dynamodb:PutItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:Scan"
                Resource: !GetAtt DynamoDBTable.Arn
              - Effect: "Allow"
                Action:
                  - "dynamodb:DescribeTable"
                Resource: !GetAtt DynamoDBTable.Arn

  LambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref VSGetQuotesFunction
      Action: 'lambda:InvokeFunction'
      Principal: 'apigateway.amazonaws.com'
      SourceArn: 
        Fn::Sub: 
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/GET/quotes
        - ApiId: !Ref MyApi
  AddQuoteLambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref VSAddQuoteFunction
      Action: 'lambda:InvokeFunction'
      Principal: 'apigateway.amazonaws.com'
      SourceArn: 
        Fn::Sub: 
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/POST/quotes
        - ApiId: !Ref MyApi    

  MyApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub ${AWS::StackName}-api
      EndpointConfiguration:
        Types:
          - REGIONAL
      Body:
        swagger: '2.0'
        info:
          title: !Ref AWS::StackName
        paths:
          /quotes:
            get:
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${VSGetQuotesFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
                responses:
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
              responses:
                '200':
                  description: '200 response'
                  headers:
                    Access-Control-Allow-Origin:
                      type: 'string'
            post:
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${VSAddQuoteFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
                responses:
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
              responses:
                '200':
                  description: '200 response'
                  headers:
                    Access-Control-Allow-Origin:
                      type: 'string'
            options:
              consumes:
                - 'application/json'
              produces:
                - 'application/json'
              responses:
                '200':
                  description: '200 response'
                  headers:
                    Access-Control-Allow-Headers:
                      type: 'string'
                    Access-Control-Allow-Methods:
                      type: 'string'
                    Access-Control-Allow-Origin:
                      type: 'string'
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
                      method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                passthroughBehavior: 'when_no_match'
                type: 'mock'
                cacheNamespace: 'cache-namespace'
                
  MyApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref MyApi
      Description: 'API Deployment'
  MyApiStage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      StageName: v1
      Description: API Stage
      RestApiId: !Ref MyApi
      DeploymentId: !Ref MyApiDeployment



#Lambda Functions
  VSGetQuotesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: "${ProjectName}_VSGetQuotesFunction"
      CodeUri: lambda-functions/
      Handler: VSGetQuotesFunction.lambda_handler
      Runtime: python3.9
      Role:
        Fn::GetAtt:
          - MyLambdaExecutionRole
          - Arn

      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref DynamoDBTable
      Timeout: 60
            
  VSAddQuoteFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: "${ProjectName}_VSAddQuoteFunction"
      CodeUri: lambda-functions/
      Handler: VSAddQuoteFunction.lambda_handler
      Runtime: python3.9
      Role:
        Fn::GetAtt:
          - MyLambdaExecutionRole
          - Arn
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref DynamoDBTable
      Timeout: 60


Outputs:
  DynamoDBTable:
    Description: "DynamoDB Table ARN"
    Value: !GetAtt DynamoDBTable.Arn

  VSGetQuotesFunction:
    Description: "Get Quotes Lambda Function ARN"
    Value: !GetAtt VSGetQuotesFunction.Arn

  VSAddQuoteFunction:
    Description: "Add Quote Lambda Function ARN"
    Value: !GetAtt VSAddQuoteFunction.Arn

  MyLambdaExecutionRole:
    Description: "IAM Role created for Lambda functions"
    Value: !GetAtt MyLambdaExecutionRole.Arn

  MyApi:
    Description: "API Gateway endpoint URL for v1 stage"
    Value: 
      Fn::Sub: "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/v1/"
